/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedVacancyIdImport } from './routes/_authenticated/vacancy/$id'
import { Route as AuthenticatedCandidateIdImport } from './routes/_authenticated/candidate/$id'

// Create Virtual Routes

const AuthenticatedAboutLazyImport = createFileRoute('/_authenticated/about')()
const AuthenticatedVacancyIndexLazyImport = createFileRoute(
  '/_authenticated/vacancy/',
)()
const AuthenticatedCandidateIndexLazyImport = createFileRoute(
  '/_authenticated/candidate/',
)()

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAboutLazyRoute = AuthenticatedAboutLazyImport.update({
  path: '/about',
  getParentRoute: () => AuthenticatedRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/about.lazy').then((d) => d.Route),
)

const AuthenticatedVacancyIndexLazyRoute =
  AuthenticatedVacancyIndexLazyImport.update({
    path: '/vacancy/',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/vacancy/index.lazy').then((d) => d.Route),
  )

const AuthenticatedCandidateIndexLazyRoute =
  AuthenticatedCandidateIndexLazyImport.update({
    path: '/candidate/',
    getParentRoute: () => AuthenticatedRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/candidate/index.lazy').then((d) => d.Route),
  )

const AuthenticatedVacancyIdRoute = AuthenticatedVacancyIdImport.update({
  path: '/vacancy/$id',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedCandidateIdRoute = AuthenticatedCandidateIdImport.update({
  path: '/candidate/$id',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/about': {
      preLoaderRoute: typeof AuthenticatedAboutLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/candidate/$id': {
      preLoaderRoute: typeof AuthenticatedCandidateIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/vacancy/$id': {
      preLoaderRoute: typeof AuthenticatedVacancyIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/candidate/': {
      preLoaderRoute: typeof AuthenticatedCandidateIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/vacancy/': {
      preLoaderRoute: typeof AuthenticatedVacancyIndexLazyImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthenticatedRoute.addChildren([
    AuthenticatedAboutLazyRoute,
    AuthenticatedIndexRoute,
    AuthenticatedCandidateIdRoute,
    AuthenticatedVacancyIdRoute,
    AuthenticatedCandidateIndexLazyRoute,
    AuthenticatedVacancyIndexLazyRoute,
  ]),
  LoginRoute,
  SignupRoute,
])

/* prettier-ignore-end */
